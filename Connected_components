class Graph:
    def __init__(self,V):
        self.V = V
        self.graph = [[] for i in range(self.V)]
    def addEdge(self,v,w):
        self.graph[v].append(w)
        self.graph[w].append(v)
    def connectedComponents(self):
        visited = [False]*(self.V)
        ans = []
        for i in range(self.V):
            if visited[i]==False:
                temp = []
                ans.append(self.DfsUtil(temp,i,visited))
        return ans
    def DfsUtil(self,temp,v,visited):
        visited[v] = True
        temp.append(v)
        for i in self.graph[v]:
            if visited[i]==False:
                temp = self.DfsUtil(temp,i,visited)
        return temp

g = Graph(5)
g.addEdge(1,0)
g.addEdge(2,3)
g.addEdge(3,4)
cc = g.connectedComponents()
for i in cc:
    print(*i)
